/**
 * Public Statistics API
 * Serves non-authenticated statistics data from Netlify Blobs
 */

const NETLIFY_BLOBS_API = 'https://api.netlify.com/api/v1/blobs';
const SITE_ID = process.env.NETLIFY_SITE_ID;
const ACCESS_TOKEN = process.env.NETLIFY_API_TOKEN;
const STATS_KEY = 'statistics/stats.json';

exports.handler = async (event, context) => {
  // Set CORS headers
  const headers = {
    'Access-Control-Allow-Origin': '*',
    'Access-Control-Allow-Headers': 'Content-Type',
    'Access-Control-Allow-Methods': 'GET, OPTIONS',
    'Content-Type': 'application/json'
  };

  // Handle preflight requests
  if (event.httpMethod === 'OPTIONS') {
    return {
      statusCode: 200,
      headers,
      body: ''
    };
  }

  // Only allow GET requests
  if (event.httpMethod !== 'GET') {
    return {
      statusCode: 405,
      headers,
      body: JSON.stringify({ error: 'Method not allowed' })
    };
  }

  // Check if Netlify Blobs is configured
  if (!SITE_ID || !ACCESS_TOKEN) {
    console.warn('Netlify Blobs not configured, serving demo data');
    return serveDemoData(headers);
  }

  try {
    // Try to fetch real statistics from Netlify Blobs
    const storeUrl = `${NETLIFY_BLOBS_API}/${SITE_ID}`;
    const response = await fetch(`${storeUrl}/${STATS_KEY}`, {
      headers: { 'Authorization': `Bearer ${ACCESS_TOKEN}` }
    });

    if (response.status === 404) {
      // No statistics found, serve demo data
      console.log('No statistics found in Netlify Blobs, serving demo data');
      return serveDemoData(headers);
    }

    if (!response.ok) {
      throw new Error(`Failed to fetch statistics: ${response.statusText}`);
    }

    const statisticsData = await response.json();
    
    // Add metadata for public consumption
    const publicStats = {
      ...statisticsData,
      isLiveData: true,
      lastUpdated: statisticsData.savedAt ? new Date(statisticsData.savedAt).toISOString() : new Date().toISOString(),
      source: 'Generated by admin from approved matches'
    };

    return {
      statusCode: 200,
      headers,
      body: JSON.stringify(publicStats)
    };

  } catch (error) {
    console.error('Error loading statistics from Netlify Blobs:', error);
    
    // Fallback to demo data on error
    console.log('Falling back to demo data due to error');
    return serveDemoData(headers);
  }
};

// Fallback demo data function
function serveDemoData(headers) {
  const demoStats = {
    totalMatches: 15,
    totalGoals: 34,
    totalAssists: 18,
    playerStats: [
      { name: 'John Smith', goals: 9, assists: 4, appearances: 12, isRosterPlayer: true },
      { name: 'Mike Johnson', goals: 7, assists: 5, appearances: 15, isRosterPlayer: true },
      { name: 'David Wilson', goals: 6, assists: 3, appearances: 11, isRosterPlayer: true },
      { name: 'Chris Brown', goals: 5, assists: 3, appearances: 13, isRosterPlayer: true },
      { name: 'Tom Davis', goals: 4, assists: 2, appearances: 10, isRosterPlayer: true },
      { name: 'Alex Miller', goals: 3, assists: 1, appearances: 8, isRosterPlayer: true },
      { name: 'Ryan Taylor', goals: 0, assists: 0, appearances: 7, isRosterPlayer: true }
    ],
    teamStats: {
      totalMatches: 15,
      wins: 9,
      draws: 4,
      losses: 2,
      goalsFor: 34,
      goalsAgainst: 18,
      winPercentage: 60,
      avgGoalsFor: '2.3',
      avgGoalsAgainst: '1.2',
      avgAttendance: '19.2',
      avgAssists: '1.2'
    },
    matchStats: [
      { date: '2024-01-15', opposition: 'City United', ourGoals: 3, theirGoals: 1, attendance: 22 },
      { date: '2024-01-22', opposition: 'Rangers FC', ourGoals: 2, theirGoals: 2, attendance: 18 },
      { date: '2024-01-29', opposition: 'Athletic Club', ourGoals: 1, theirGoals: 0, attendance: 24 },
      { date: '2024-02-05', opposition: 'Town FC', ourGoals: 4, theirGoals: 2, attendance: 20 },
      { date: '2024-02-12', opposition: 'Rovers United', ourGoals: 2, theirGoals: 1, attendance: 19 },
      { date: '2024-02-19', opposition: 'United FC', ourGoals: 3, theirGoals: 0, attendance: 21 },
      { date: '2024-02-26', opposition: 'Wanderers', ourGoals: 1, theirGoals: 1, attendance: 17 },
      { date: '2024-03-05', opposition: 'Albion FC', ourGoals: 2, theirGoals: 3, attendance: 23 },
      { date: '2024-03-12', opposition: 'County FC', ourGoals: 4, theirGoals: 1, attendance: 18 },
      { date: '2024-03-19', opposition: 'Villa United', ourGoals: 2, theirGoals: 0, attendance: 20 },
      { date: '2024-03-26', opposition: 'Forest FC', ourGoals: 3, theirGoals: 2, attendance: 19 },
      { date: '2024-04-02', opposition: 'Hotspur FC', ourGoals: 1, theirGoals: 1, attendance: 16 },
      { date: '2024-04-09', opposition: 'Palace United', ourGoals: 2, theirGoals: 1, attendance: 22 },
      { date: '2024-04-16', opposition: 'Brighton FC', ourGoals: 3, theirGoals: 2, attendance: 21 },
      { date: '2024-04-23', opposition: 'Wolves United', ourGoals: 1, theirGoals: 2, attendance: 18 }
    ],
    isLiveData: false,
    lastUpdated: new Date().toISOString(),
    source: 'Demo data - no live statistics available'
  };

  return {
    statusCode: 200,
    headers,
    body: JSON.stringify(demoStats)
  };
}